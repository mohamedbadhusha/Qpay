<div>
    <fieldset>
        <legend>{{ text_transaction }}</legend>

        <form action="#" method="post" class="form-horizontal">
            <div class="form-group">
                <label class="col-sm-4 control-label">{{ column_transaction }}</label>
                <div class="col-sm-8">{{ transaction_id }}</div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label">{{ text_status }}</label>
                <div class="col-sm-8">{{ status }}</div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label">{{ text_status_desc }}</label>
                <div class="col-sm-8">{{ status_desc }}</div>
            </div>
        </form>
    </fieldset>
     
    <fieldset>
        <div class="form-group" align="left">
            <div class="col-xs-12 col-md-3"></div>
            <label id="requiredMessage" style="display:none"> {{fill_the_required_field}} </label>
            <label id="refAmountMessage" style="display:none"> {{invalid_refund_amount}} </label>
            <label id="AmountMessage" style="display:none"> {{lessOrEqual_refund_amount}} </label>
            <div class="alert alert-danger col-xs-12 errorMessage" role="alert" style="display: none; color: #A94442" id="clientSideErrors">
                <ul class='errorListul'>
                    <li style="list-style: none;">
                        <i class="fa fa-exclamation-circle"></i>
                        <span class="sr-only">Error:</span>
                        <span id="clientSideErrorsText"></span>
                    </li>
                </ul>
            </div>
        </div> 
    </fieldset>
    <fieldset>
        <legend>{{ text_refund }}</legend>

        <form action="{{ refundAction }}" method="post" name="redirectForm" class="form-horizontal">
            <div class="form-group">
                <div class="required">
                    <label class="col-sm-4 control-label ">{{ text_amount_refunded }}</label>
                </div>
                <div class="col-sm-8">
                    <input type="text" id="refundAmount" name="refund_amount" value="{{amount}}" class="form-control RequiredField " maxLength="9" />
                    <input type="hidden" name="order_id" value="{{order_id}}" />
                    <input type="hidden" id = "decimalPlace" name="decimal_place" value="{{decimal_place}}" />
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label">{{ text_prev_refunded_amount }}</label>
                <div class="col-sm-8">{{ prev_refund_amount }}</div>
            </div>

            <div class="form-group">
                <div class="col-md-6 col-md-offset-3">
                    <div class="col-md-12 autoMargin text-center">
                        <div class="col-md-5">
                            <button type="submit" onclick="javascript: return submitForm();" class="btn btn-primary col-md-12" id="button-confirm" data-loading-text="{{text_loading}}">{{button_refund}}</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </fieldset>
</div>
<script type="text/javascript">
   /* $('#button-confirm').on('click', function() {
        $('#button-confirm').button('loading');
    });*/

	$(document).ready(function() {
	//console.log($('#currencyLstId').find(':selected').attr('data-decimal'));
	$('#refundAmount').attr("placeholder", "0");
	//$('#refundAmount').placeholder();
	
	$('#refundAmount').keyup(function() {
		numberOfDecimals = $('#decimalPlace').val();
		number = $('#refundAmount').val();
		if ((numberOfDecimals == null || numberOfDecimals === undefined)) {
			number = number.replace(/[^0-9]/g, '');
			$('#refundAmount').val(normlizeNumber(number));
			return;
		}
		formatPriceField();
	});
	
        //$('#currencyLstId').trigger('change');
    });

    function getNumberOfDecimals(element) {
            if (element == null || element == undefined) {
                    return 0;
            }

            var numberOfDecimals = element.val();
            if (numberOfDecimals == null || numberOfDecimals == undefined) {
                    return 0;
            }

            return numberOfDecimals;
    }

    function formatPriceField() {
            var inputValue = $('#refundAmount').val();
            var numberOfDecimals = getNumberOfDecimals($('#decimalPlace'));
            $('#refundAmount').val(formattingNumber(inputValue, numberOfDecimals));
    }

    function formattingNumber(number, numberOfDecimals) {
            if (number != number.replace(/[^0-9]/g, '')) {
                    number = number.replace(/[^0-9]/g, '');
            }

            var normlizedNumber = normlizeNumber(number);
            var fixedNumber = fixNumberWithDecimal(normlizedNumber, numberOfDecimals);
            return fixedNumber;
    }

    function fixNumberWithDecimal(number, numberOfDecimals) {
            var fixedNumber = "";
            if (number.length ==  numberOfDecimals) {
                    fixedNumber = "0." + number;
                    return fixedNumber;
            }

            if (number.length <  numberOfDecimals) {		
                    fixedNumber = paddingNumberWithZeros(number, numberOfDecimals);
                    return fixedNumber;
            }

            fixedNumber = number.substring(0, number.length - numberOfDecimals) +"."+number.substring((number.length - numberOfDecimals), number.length);

            return fixedNumber;	
    }

    function paddingNumberWithZeros(number, numberOfDecimals) {
            var paddedNumber = "0.";
            for (var iteration = 0; iteration < numberOfDecimals - number.length; iteration++) {
                    paddedNumber += "0";
            }
            return paddedNumber + number;
    }

    // removing padding zeros from the number
    function normlizeNumber(number) {
            return number.replace(/^0+/, '');
    }

    function placeHolderFormatter(inputElement, numberOfDecimals) {
                    if (numberOfDecimals == null || numberOfDecimals == undefined) {
                    inputElement.attr("placeholder", "0");
                    return;
            }

            var formattedPlaceHolder = "0.";
            for (var i = 0;i < numberOfDecimals; i++) {
                    formattedPlaceHolder += "0";
            }
            inputElement.attr("placeholder", formattedPlaceHolder);
    }
	
    function checkRequiredFields(){
    	var requiredField = document.getElementById("refundAmount");
      	var clientSideErrors = document.getElementById("clientSideErrors");
	var clientSideErrorsText = document.getElementById("clientSideErrorsText");

	var hasErrors = false;
	
        if (requiredField.value=='') {
                hasErrors='true';
                requiredField.style.webkitAppearance = "none";
                requiredField.style.boxShadow="0px 0px 2px 2px #ff1a1a";
        } else {
                requiredField.style.boxShadow="0px 0px 0px 0px";
        }
	
	if(hasErrors) {
            clientSideErrors.style.display = "";
            clientSideErrorsText.innerHTML = document.getElementById('requiredMessage').innerHTML;
            return false;
	}
	return true;
    }
    
    function submitForm() {
        //check if amount to refund field is not empty.
	var valid = checkRequiredFields();
        var clientSideErrors = document.getElementById("clientSideErrors");
	var clientSideErrorsText = document.getElementById("clientSideErrorsText");
	var pass = false;
        
        if(valid) {
            pass = true;
            //check if amount to refund is less than total amount or equal zero
            var refundAmount = document.getElementById("refundAmount").value;
            var amount = {{amount}};  
            if(refundAmount > amount || refundAmount <= 0 ){
                pass = false;
                clientSideErrors.style.display = "";
                clientSideErrorsText.innerHTML = document.getElementById('AmountMessage').innerHTML;
                document.getElementById("refundAmount").style.boxShadow="0px 0px 2px 2px #ff1a1a";
            }
        } 
        return pass;
    }
</script>

<style type="text/css">
    .form-horizontal .control-label {
        padding-top: 0px;
    }

    .autoMargin {
        margin-right: auto;
        margin-left: auto;
    }

    .autoMargin > div {
        float: none;
        display: inline-block;
    }
</style>
